<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="exercises7.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure pragmas browser query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1464"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Shipment" custom_title="0" dock_id="20" table="4,8:mainShipment"/><dock_state state="000000ff00000000fd0000000100000002000004f400000260fc0100000002fb000000160064006f0063006b00420072006f007700730065003101000000000000043c0000000000000000fb000000180064006f0063006b00420072006f007700730065003200300100000000000004f40000012f00ffffff000004f40000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Client" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="138"/><column index="2" value="140"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Employee" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="106"/><column index="2" value="195"/><column index="3" value="101"/><column index="4" value="62"/><column index="5" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Package" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="85"/><column index="2" value="140"/><column index="3" value="140"/><column index="4" value="66"/><column index="5" value="65"/><column index="6" value="84"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Shipment" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="105"/><column index="2" value="85"/><column index="3" value="79"/><column index="4" value="60"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="create tables*">DROP TABLE Employee;
DROP TABLE Planet;
DROP TABLE Shipment;
DROP TABLE Has_Clearance;
DROP TABLE Client;
DROP TABLE Package;

CREATE TABLE Employee (
  EmployeeID INTEGER,
  Name TEXT NOT NULL,
  Position TEXT NOT NULL,
  Salary REAL NOT NULL,
  Remarks TEXT,
  PRIMARY KEY (EmployeeID)
); 

CREATE TABLE Planet (
  PlanetID INTEGER,
  Name TEXT NOT NULL,
  Coordinates REAL NOT NULL,
  PRIMARY KEY (PlanetID)
); 

CREATE TABLE Shipment (
  ShipmentID INTEGER,
  Date DATE,
  Manager INTEGER NOT NULL,
  Planet INTEGER NOT NULL,
  PRIMARY KEY (ShipmentID)
);

CREATE TABLE Has_Clearance (
  Employee INTEGER NOT NULL,
  Planet INTEGER NOT NULL,
  Level INTEGER NOT NULL,
  PRIMARY KEY(Employee, Planet)
); 

CREATE TABLE Client (
  AccountNumber INTEGER,
  Name VARCHAR(255) NOT NULL,
  PRIMARY KEY (AccountNumber)
);
  
CREATE TABLE Package (
  Shipment INTEGER NOT NULL,
  PackageNumber INTEGER NOT NULL,
  Contents TEXT NOT NULL,
  Weight REAL NOT NULL,
  Sender INTEGER NOT NULL,
  Recipient INTEGER NOT NULL,
  PRIMARY KEY(Shipment, PackageNumber)
);
</sql><sql name="populate tables*">INSERT INTO Client VALUES
(1, 'Zapp Brannigan'),
(2, &quot;Al Gore's Head&quot;),
(3, 'Barbados Slim'),
(4, 'Ogden Wernstrom'),
(5, 'Leo Wong'),
(6, 'Lrrr'),
(7, 'John Zoidberg'),
(8, 'John Zoidfarb'),
(9, 'Morbo'),
(10, 'Judge John Whitey'),
(11, 'Calculon');

INSERT INTO Employee VALUES
(1, 'Phillip J. Fry', 'Delivery boy', 7500.0, 'Not to be confused with the Philip J. Fry from Hovering Squid World 97a'),
(2, 'Turanga Leela', 'Captain', 10000.0, NULL),
(3, 'Bender Bending Rodriguez', 'Robot', 7500.0, NULL),
(4, 'Hubert J. Farnsworth', 'CEO', 20000.0, NULL),
(5, 'John A. Zoidberg', 'Physician', 25.0, NULL),
(6, 'Amy Wong', 'Intern', 5000.0, NULL),
(7, 'Hermes Conrad', 'Bureaucrat', 10000.0, NULL),
(8, 'Scruffy Scruffington', 'Janitor', 5000.0, NULL);


INSERT INTO Planet VALUES
(1, 'Omicron Persei 8', 89475345.3545),
(2, 'Decapod X', 65498463216.3466),
(3, 'Mars', 32435021.65468),
(4, 'Omega III', 98432121.5464),
(5, 'Tarantulon VI', 849842198.354654),
(6, 'Cannibalon', 654321987.21654),
(7, 'DogDoo VII', 65498721354.688),
(8, 'Nintenduu 64', 6543219894.1654),
(9, 'Amazonia', 65432135979.6547);

INSERT INTO Has_Clearance VALUES
(1, 1, 2),
(1, 2, 3),
(2, 3, 2),
(2, 4, 4),
(3, 5, 2),
(3, 6, 4),
(4, 7, 1);

INSERT INTO Shipment VALUES
(1, '3004/05/11', 1, 2),
(2, '3004/05/11', 1, 2),
(3, NULL, 2, 3),
(4, NULL, 2, 4),
(5, NULL, 7, 5);

INSERT INTO Package VALUES
(1, 1, 'Undeclared', 1.5, 1, 2),
(2, 1, 'Undeclared', 10.0, 2, 3),
(2, 2, 'A bucket of krill', 2.0, 8, 7),
(3, 1, 'Undeclared', 15.0, 3, 4),
(3, 2, 'Undeclared', 3.0, 5, 1),
(3, 3, 'Undeclared', 7.0, 2, 3),
(4, 1, 'Undeclared', 5.0, 4, 5),
(4, 2, 'Undeclared', 27.0, 1, 2),
(5, 1, 'Undeclared', 100.0, 5, 1);</sql><sql name="exercise7*">-- 7.1 Who received a 1.5kg package?
    -- (The result is &quot;Al Gore's Head&quot;).
SELECT Client.Name 
FROM Package 
JOIN Client ON Client.AccountNumber = Package.Recipient 
WHERE Package.Weight = 1.5;

SELECT * FROM Package WHERE Weight = 1.5;

-- 7.2 What is the total weight of all the packages that they sent?
SELECT SUM(Weight) AS Total_Weight FROM Package WHERE Package.Sender = (
	SELECT Client.AccountNumber 
	FROM Package JOIN Client ON Client.AccountNumber = Package.Recipient 
	WHERE Package.Weight = 1.5
);

-- Optional questions

-- 7.3 Retrieve the names of employees who have clearance level 4 or higher.
SELECT 
Employee.Name 
FROM Has_Clearance 
JOIN Employee ON Employee.EmployeeID = Has_Clearance.Employee 
WHERE Has_Clearance.Level &gt;= 4;

-- 7.4 Rank the employees based on their salary in descending order, showing their names and positions alongside their rank. (Try using a Window Function if you are up to the challenge!)
SELECT Name, Salary FROM Employee ORDER BY Salary DESC;
SELECT Name, Position, DENSE_RANK() OVER(ORDER BY Salary DESC) AS Salary_Rank FROM Employee;

-- 7.5 Create a CTE to calculate the total weight of packages sent to each planet, then join it with the Planet table to display the planet names and their corresponding total weights.
SELECT Planet.Name, SUM(Weight) AS Total_Weight FROM Planet 
JOIN Shipment ON Planet.PlanetID = Shipment.Planet
JOIN Package ON Package.Shipment = Shipment.ShipmentID
GROUP BY Shipment.Planet;

WITH Planet_Package_Total_Weight AS (
	SELECT Shipment.Planet AS PlanetID, SUM(Weight) AS Total_Weight FROM Shipment
	JOIN Package ON Package.Shipment = Shipment.ShipmentID
	GROUP BY Shipment.Planet
)
SELECT Planet.Name, Total_Weight 
FROM Planet_Package_Total_Weight 
JOIN Planet ON Planet_Package_Total_Weight.PlanetID = Planet.PlanetID;

-- 7.6 Retrieve the names of employees who have shipped packages to planets that no other employee has shipped to.
--???
SELECT DISTINCT Name
FROM Employee
JOIN Shipment ON Employee.EmployeeID = Shipment.Manager
WHERE Shipment.Planet NOT IN (
	SELECT Planet FROM Shipment WHERE NOT Manager = Employee.EmployeeID
);

-- 7.7 Retrieve the names of planets along with the number of shipments made to each planet, but exclude planets where the total weight of packages sent is less than 20 units.

SELECT Name, COUNT(*) AS Shipments
FROM Planet 
JOIN Shipment ON Shipment.Planet = Planet.PlanetID 
JOIN (
	SELECT Shipment.Planet AS PlanetID, SUM(Weight) AS Total_Weight FROM Shipment
	JOIN Package ON Package.Shipment = Shipment.ShipmentID
	GROUP BY Shipment.Planet
) AS subquery ON subquery.PlanetID = Planet.PlanetID
GROUP BY Name
HAVING subquery.Total_Weight &lt; 20;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
