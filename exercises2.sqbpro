<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="exercises9.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure pragmas browser query" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1122"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Logs" custom_title="0" dock_id="7" table="4,4:mainLogs"/><dock_state state="000000ff00000000fd0000000100000002000004f400000260fc0100000004fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f00770073006500320100000000000003cd0000000000000000fb000000160064006f0063006b00420072006f00770073006500330100000000000004f40000000000000000fb000000160064006f0063006b00420072006f00770073006500370100000000000004f40000016000ffffff000004f40000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Logs" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="141"/><column index="2" value="70"/><column index="3" value="70"/><column index="4" value="84"/><column index="5" value="61"/><column index="6" value="101"/><column index="7" value="171"/><column index="8" value="109"/><column index="9" value="70"/><column index="10" value="56"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="create tables">DROP TABLE Employees;
DROP TABLE Departments;

CREATE TABLE IF NOT EXISTS Departments (
  Code INTEGER,
  Name TEXT NOT NULL,
  Budget REAL NOT NULL,
  PRIMARY KEY (Code)   
);

CREATE TABLE IF NOT EXISTS Employees (
  SSN INTEGER,
  Name TEXT NOT NULL ,
  LastName TEXT NOT NULL ,
  Department INTEGER NOT NULL , 
  PRIMARY KEY (SSN)   
);
</sql><sql name="populate tables">INSERT INTO Departments(Code,Name,Budget) VALUES
(14,'IT',65000),
(37,'Accounting',15000),
(59,'Human Resources',240000),
(77,'Research',55000);

INSERT INTO Employees(SSN,Name,LastName,Department) VALUES
('123234877','Michael','Rogers',14),
('152934485','Anand','Manikutty',14),
('222364883','Carol','Smith',37),
('326587417','Joe','Stevens',37),
('332154719','Mary-Anne','Foster',14),
('332569843','George','ODonnell',77),
('546523478','John','Doe',59),
('631231482','David','Smith',77),
('654873219','Zacary','Efron',59),
('745685214','Eric','Goldsmith',59),
('845657245','Elizabeth','Doe',14),
('845657246','Kumar','Swamy',14);</sql><sql name="exercises2">-- 2.1 Select the last name of all employees.
SELECT LastName FROM Employees;

-- 2.2 Select the last name of all employees, without duplicates.
SELECT LastName FROM Employees GROUP BY LastName;

-- 2.3 Select all the data of employees whose last name is &quot;Smith&quot;.
SELECT * FROM Employees WHERE LastName = 'Smith';

-- 2.4 Select all the data of employees whose last name is &quot;Smith&quot; or &quot;Doe&quot;.
SELECT * FROM Employees WHERE LastName = 'Smith' OR LastName = 'Doe';

-- 2.5 Select all the data of employees that work in department 14.
SELECT * FROM Employees WHERE Department = 14;

-- 2.6 Select all the data of employees that work in department 37 or department 77.
SELECT * FROM Employees WHERE Department IN (37, 77);

-- 2.7 Select all the data of employees whose last name begins with an &quot;S&quot;.
SELECT * FROM Employees WHERE LastName LIKE 'S%';

-- 2.8 Select the sum of all the departments' budgets.
SELECT SUM(Budget) total_budget FROM Departments;

-- 2.9 Select the number of employees in each department (you only need to show the department code and the number of employees).
SELECT Department, COUNT(*) AS Employee_Count FROM Employees GROUP BY Department;

-- 2.10 Select all the data of employees, including each employee's department's data.
SELECT * FROM Employees JOIN Departments ON Employees.Department = Departments.Code;

-- 2.11 Select the name and last name of each employee, along with the name and budget of the employee's department.
SELECT 
	Employees.Name FirstName, 
	LastName, 
	Departments.name DepartmentName, 
	Budget 
FROM Employees JOIN Departments
ON Employees.Department = Departments.Code;

-- 2.12 Select the name and last name of employees working for departments with a budget greater than $60,000.
SELECT Employees.name, LastName 
FROM Employees JOIN Departments 
ON Employees.Department = Departments.Code 
WHERE Budget &gt; 60000;

-- 2.13 Select the departments with a budget larger than the average budget of all the departments.
SELECT * FROM Departments WHERE Budget &gt; (
	SELECT AVG(Budget) FROM Departments
);

-- 2.14 Select the names of departments with more than two employees.
SELECT Name FROM Departments WHERE Code IN (
	SELECT Code
	FROM Employees JOIN Departments 
	ON Employees.Department = Departments.Code 
	GROUP BY Department 
	HAVING COUNT(*) &gt; 2
);

-- 2.15 Select the name and last name of employees working for the two departments with lowest budget.
SELECT Name, LastName FROM Employees WHERE Department IN (
	SELECT Code FROM Departments ORDER BY Budget LIMIT 2
);

-- 2.16  Add a new department called &quot;Quality Assurance&quot;, with a budget of $40,000 and departmental code 11. 
INSERT INTO Departments (Code, Name, Budget) VALUES (11, &quot;Quality Assurance&quot;, 40000);

-- And Add an employee called &quot;Mary Moore&quot; in that department, with SSN 847-21-9811.
INSERT INTO Employees (SSN, Name, LastName, Department) VALUES (847219811, &quot;Mary&quot;, &quot;Moore&quot;, 11);

-- 2.17 Reduce the budget of all departments by 10%.
UPDATE Departments SET Budget = Budget * 0.9;

-- 2.18 Reassign all employees from the Research department (code 77) to the IT department (code 14).
UPDATE Employees SET Department = 14 WHERE Department = 77;

-- 2.19 Delete from the table all employees in the IT department (code 14).
DELETE FROM Employees WHERE Department = 14;

-- 2.20 Delete from the table all employees who work in departments with a budget greater than or equal to $60,000.
DELETE FROM Employees WHERE SSN IN (
	SELECT SSN FROM Employees JOIN Departments 
	ON Employees.Department = Departments.Code 
	WHERE Budget &gt; 60000
);

-- 2.21 Delete from the table all employees.
DELETE FROM Employees;
</sql><current_tab id="2"/></tab_sql></sqlb_project>
